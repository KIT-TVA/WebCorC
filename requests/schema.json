/verify
{
    cbcFormula: cbc_formula,
    javaVariables: [java_variable],
    globalConditions: [condition],
    renamings: [renaming]
}

cbc_formula
{
    name: string,
    statement: statement,
    isProven: boolean
}

statement_type: STATEMENT, COMPOSITION, RETURN, SELECTION, SKIP, REPETITION;

statement (unterschiedlich je nach typ)
BASIC, SKIP 
{
    name: string,
    statementType: statement_type,
    refinement: statement,
    preCondition: condition,
    postCondition: condition,
    isProven: boolean

}

RETURN
{
    name: string,
    statementType: statement_type,
    preCondition: condition,
    postCondition: condition,
    isProven: boolean

}

statement
COMPOSITION
{
    [.statement.]
    firstStatement: statement,
    secondStatement: statement,
    intermediateCondition: condition
}

statement
SELECTION
{
    [.statement.]
    guards: [condition],
    command: [statement],
    isPreProven: boolean
}

statement
REPETITION
{
    [.statement.]
    loopStatement: statement,
    variant: condition,
    invariant: condition,
    guard: condition,
    isVariantProven: boolean,
    isPreProven: boolean,
    isPostProven: boolean
}

condition
{
    condition: string
}

java_variable
{
    name: string,
    kind: java_variable_kind,
    modifier: string,
    displayName: string
}

java_variable_kind: LOCAL, PARAM, RETURN, GLOBAL, GLOBAL_PARAM, RETURN_PARAM

renaming: {
    type: string
    function: string,
    newName: string
}
